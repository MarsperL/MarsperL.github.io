!function(){"use strict";const t=(t,i=30)=>{let s;return(...e)=>{clearTimeout(s),s=setTimeout(()=>t.apply(this,e),i)}};class i{static sensors=new Map;static observe(i,s){const e=new ResizeObserver(t(()=>{s(i)}));e.observe(i),this.sensors.set(i,e)}static unobserve(t){const i=this.sensors.get(t);i&&(i.disconnect(),this.sensors.delete(t))}}new class{constructor(t,i={}){this.container=t,this.options={colorType:"rainbow",colors:["#FF6B6B","#4ECDC4","#45B7D1"],lineType:"gradient",particleCount:80,maxDistance:6e3,particleSize:2,lineWidth:1,opacity:.6,zIndex:-1,velocity:.8,speedVariation:.3,...i},this.initCanvas(),this.initParticles(),this.bindEvents(),this.startAnimation()}initCanvas(){this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),Object.assign(this.canvas.style,{position:"absolute",top:"0",left:"0",zIndex:this.options.zIndex,opacity:this.options.opacity}),this.container.appendChild(this.canvas),this.resizeCanvas()}resizeCanvas(){this.canvas.width=this.container.clientWidth,this.canvas.height=this.container.clientHeight}initParticles(){this.particles=Array.from({length:this.options.particleCount},(t,i)=>{const s=this.options.velocity*(1+this.options.speedVariation*(Math.random()-.5));return{id:i,x:Math.random()*this.canvas.width,y:Math.random()*this.canvas.height,vx:(Math.random()-.5)*s,vy:(Math.random()-.5)*s,color:this.generateColor(),connections:new Set}}),this.mouse={x:null,y:null}}generateColor(){return"custom"===this.options.colorType?this.options.colors[Math.floor(Math.random()*this.options.colors.length)]:`hsl(${360*Math.random()}, 70%, 60%)`}bindEvents(){i.observe(this.container,()=>this.resizeCanvas()),this.mouseHandler=t=>{const i=this.container.getBoundingClientRect();this.mouse.x=t.clientX-i.left,this.mouse.y=t.clientY-i.top},this.container.addEventListener("mousemove",this.mouseHandler),this.container.addEventListener("mouseleave",()=>{this.mouse.x=null,this.mouse.y=null})}updateParticles(){this.particles.forEach(t=>{t.x+=t.vx*this.options.velocity,t.y+=t.vy*this.options.velocity,(t.x<0||t.x>this.canvas.width)&&(t.vx*=-1),(t.y<0||t.y>this.canvas.height)&&(t.vy*=-1),t.x=Math.max(0,Math.min(t.x,this.canvas.width)),t.y=Math.max(0,Math.min(t.y,this.canvas.height))})}drawConnections(){const t=[...this.particles];null!==this.mouse.x&&t.push(this.mouse);for(let i=0;i<t.length;i++){const s=t[i];for(let e=i+1;e<t.length;e++){const i=t[e],n=s.x-i.x,o=s.y-i.y,a=n*n+o*o;if(a<this.options.maxDistance){const t=this.ctx.createLinearGradient(s.x,s.y,i.x,i.y);t.addColorStop(0,s.color),t.addColorStop(1,i.color||s.color),this.ctx.strokeStyle="gradient"===this.options.lineType?t:s.color,this.ctx.lineWidth=this.options.lineWidth*(1-a/this.options.maxDistance),this.ctx.beginPath(),this.ctx.moveTo(s.x,s.y),this.ctx.lineTo(i.x,i.y),this.ctx.stroke()}}}}drawParticles(){this.particles.forEach(t=>{this.ctx.fillStyle=t.color,this.ctx.fillRect(t.x-this.options.particleSize/2,t.y-this.options.particleSize/2,this.options.particleSize,this.options.particleSize)})}animate(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.updateParticles(),this.drawConnections(),this.drawParticles(),requestAnimationFrame(()=>this.animate())}startAnimation(){this.animationFrame=requestAnimationFrame(()=>this.animate())}destroy(){cancelAnimationFrame(this.animationFrame),i.unobserve(this.container),this.container.removeEventListener("mousemove",this.mouseHandler),this.canvas.remove()}}(document.body,{colorType:"rainbow",lineType:"gradient",particleCount:200,lineWidth:2,particleSize:4,maxDistance:8e3,velocity:.9,speedVariation:.5,zIndex:-1,opacity:.9})}();